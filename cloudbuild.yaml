steps:

# Build a docker image
 - name: 'gcr.io/cloud-builders/docker'
   args: ['build', '-t', 'gcr.io/sanchit909090/wcm:latest', '.']
   id: 'build-image'
   waitFor: ['-']
   
# push the container image to Container Registry
 - name: 'gcr.io/cloud-builders/docker'
   args: ['push', 'gcr.io/sanchit909090/wcm:latest']
   id: 'push-image'
   waitFor: ['build-image']
    
# Train the model.
 - name: 'gcr.io/sanchit909090/wcm:latest'
   entrypoint: 'python'
   args: ['build/task.py',
          '--mode', 'train-model',
          '--project', 'sanchit909090',
          '--region', 'us-central1',
          '--job-name', 'custom_training',
          '--script_path', 'build/task.py',
          '--container_uri' 'us-docker.pkg.dev/vertex-ai/training/tf-cpu.2-8:latest',
          '--model_serving_container_image_uri', 'us-docker.pkg.dev/vertex-ai/prediction/tf2-cpu.2-8:latest',
          '--model-display-name', 'wcm-model']
   id: 'Train Model'
   waitFor: ['push-image']

# Create an endpoint.
 - name: 'gcr.io/sanchit909090/wcm:latest'
   entrypoint: 'python'
   args: ['build/utils.py',
          '--mode', 'create-endpoint',
          '--project', 'sanchit909090',
          '--region', 'us-central1',
          '--endpoint-display-name', 'wcm-endpoint']
   id: 'Create Endpoint'
   waitFor: ['Train Model']
   
# Deploy the model.
 - name: 'gcr.io/sanchit909090/wcm:latest'
   entrypoint: 'python'
   args: ['build/utils.py',
          '--mode', 'deploy-model',
          '--project', 'sanchit909090',
          '--region', 'us-central1',
          '--endpoint-display-name', 'wcm-endpoint',
          '--model-display-name', 'wcm-model']
   id: 'Deploy Endpoint'
   waitFor: ['Create Endpoint']

images:
 - 'gcr.io/sanchit909090/wcm:latest'
